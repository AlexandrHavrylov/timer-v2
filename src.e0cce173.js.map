{"version":3,"sources":["index.js"],"names":["CountdownTimer","constructor","targetDate","selector","pad","value","String","padStart","getMarkUp","components","curentTimer","document","querySelector","textContent","days","hours","mins","secs","changeTime","setInterval","curentTime","Date","time","Math","floor","timer","timer2"],"mappings":";AA+DA,SAAA,EAAA,EAAA,EAAA,GAAA,IAAA,EAAA,IAAA,GAAA,MAAA,IAAA,UAAA,kDAAA,OAAA,EAAA,IAAA,EAAA,IAAA,QA3DA,MAAMA,EACLC,aAAY,WAACC,EAAD,SAAaC,IAAW,EAAA,IAAA,MAEhCD,KAAAA,WAAaA,EACbC,KAAAA,SAAWA,EAGfC,IAAIC,GACIC,OAAAA,OAAOD,GAAOE,SAAS,EAAG,KAgBlCC,YAEKC,IAAAA,EAAa,EAAA,KAAA,EAAA,GAAA,KAAA,MACXC,MAAAA,EAAcC,SAASC,iBAAiB,KAAKT,YACnDO,EAAYE,cAAc,wBAAwBC,YAAcJ,EAAWK,KAC3EJ,EAAYE,cAAc,yBAAyBC,YAAcJ,EAAWM,MAC5EL,EAAYE,cAAc,wBAAwBC,YAAcJ,EAAWO,KAC3EN,EAAYE,cAAc,wBAAwBC,YAAcJ,EAAWQ,KAI7EC,aACAC,YAAY,KACLX,KAAAA,aACJ,MA3BmB,SAAA,IAElBY,IAAAA,EAAa,IAAIC,KACjBC,EAAO,KAAKpB,WAAakB,EAMtB,MAAA,CAACN,KAJM,KAAKV,IAAImB,KAAKC,MAAMF,EAAQ,QAI5BP,MAHC,KAAKX,IAAImB,KAAKC,MAAOF,EAAQ,MAAyB,OAGhDN,KAFP,KAAKZ,IAAImB,KAAKC,MAAOF,EAAQ,KAAoB,MAEpCL,KADb,KAAKb,IAAImB,KAAKC,MAAOF,EAAQ,IAAc,OAwBzD,MAAMG,EAAQ,IAAIzB,EAAe,CAC/BG,SAAU,WACVD,WAAa,IAAImB,KAAK,kBAIxBI,EAAMjB,YACNiB,EAAMP,aAEN,MAAMQ,EAAS,IAAI1B,EAAe,CAChCG,SAAU,WACVD,WAAa,IAAImB,KAAK,yBAIxBK,EAAOlB,YACPkB,EAAOR","file":"src.e0cce173.js","sourceRoot":"../src","sourcesContent":["/* Добавил немного разметки , \nхотел провить будет ли работать c 2мя таймерами \n */\n\nclass CountdownTimer{\n constructor({targetDate, selector}) {\n\nthis.targetDate = targetDate\nthis.selector = selector\n  }\n\n pad(value) {\n  return String(value).padStart(2, \"0\")\n}\n \n#getTimerComponents() {\n  \nlet curentTime = new Date();\nlet time = this.targetDate - curentTime\n    \nconst days =  this.pad(Math.floor(time / (1000 * 60 * 60 * 24)));\nconst hours =  this.pad(Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)));\nconst mins =  this.pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\nconst secs =  this.pad(Math.floor((time % (1000 * 60)) / 1000));    \nreturn {days, hours, mins, secs}\n};\n\n\n getMarkUp() {\n  \n  let components = this.#getTimerComponents()\n  const curentTimer = document.querySelector(`${this.selector}`)\n  curentTimer.querySelector(' [data-value=\"days\"]').textContent = components.days;\n  curentTimer.querySelector(' [data-value=\"hours\"]').textContent = components.hours;\n  curentTimer.querySelector(' [data-value=\"mins\"]').textContent = components.mins;\n  curentTimer.querySelector(' [data-value=\"secs\"]').textContent = components.secs;\n}\n\n\nchangeTime() {\nsetInterval(() => {\n  this.getMarkUp()\n },1000) \n}\n \n}\n\nconst timer = new CountdownTimer({\n  selector: '#timer-1',\n  targetDate : new Date('Jul 07, 2021'),\n\n});\n\ntimer.getMarkUp()\ntimer.changeTime()\n\nconst timer2 = new CountdownTimer({\n  selector: '#timer-2',\n  targetDate : new Date('Jul 07, 2022, 15:48'),\n \n});\n\ntimer2.getMarkUp()\ntimer2.changeTime()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"]}